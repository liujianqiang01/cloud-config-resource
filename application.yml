eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8082/eureka/
  instance:
    leaseExpirationDurationInSeconds: 2
    leaseRenewalIntervalInSeconds: 1
haima:
  nfsinstall:
    applyInstanceWithNfs: true
  rabbit:
    bindings:
    - dstExchange: exchange.center
      routingKeys:
      - com.haima.cloudplayer.shared.rabbit.domain.StateEventMessage
      - com.haima.cloudplayer.shared.rabbit.domain.StateChangedMessage
      srcExchange: exchange.statemachine
    - dstQueue: queue.statemachine.monitor
      routingKeys:
      - com.haima.cloudplayer.shared.rabbit.domain.StateEventMessage
      - com.haima.cloudplayer.shared.rabbit.domain.StateChangedMessage
      - com.haima.cloudplayer.shared.rabbit.domain.PutOnMsg
      - com.haima.cloudplayer.shared.rabbit.domain.InstallAppMsg
      - com.haima.cloudplayer.shared.rabbit.domain.UninstallAppMsg
      - com.haima.cloudplayer.shared.rabbit.domain.RemoveInstanceMessage
      - com.haima.cloudplayer.shared.rabbit.domain.Remove1uServerMessage
      - com.haima.cloudplayer.shared.rabbit.domain.RemoveConfirmMessage
      - com.haima.cloudplayer.shared.rabbit.domain.PutOnAndroidImageMsg
      - com.haima.cloudplayer.shared.rabbit.domain.DownloadOTAMsg
      - com.haima.cloudplayer.shared.rabbit.domain.OsVersionMsg
      - com.haima.cloudplayer.shared.rabbit.domain.FetchingInstanceInfoMsg
      srcExchange: exchange.center
    - dstQueue: queue.ops.task.started
      routingKeys:
      - com.haima.cloudplayer.ops.domain.rabbit.TaskStartedMessage
      srcExchange: exchange.ops
    - dstQueue: queue.ops.task.TestA
      routingKeys:
      - com.haima.cloudplayer.ops.domain.task.TaskTestA
      srcExchange: exchange.ops
    - dstQueue: queue.ops.task.TestB
      routingKeys:
      - com.haima.cloudplayer.ops.domain.task.TaskTestB
      srcExchange: exchange.ops
    - dstQueue: queue.ops.task.TestC
      routingKeys:
      - com.haima.cloudplayer.ops.domain.task.TaskTestC
      srcExchange: exchange.ops
    - dstQueue: queue.ops.task.UninstallApkBatchUnit
      routingKeys:
      - com.haima.cloudplayer.ops.domain.task.taskinstallapkbatch.TaskUninstallationUnit
      srcExchange: exchange.ops
    - dstQueue: queue.ops.task.InstallApkBatchUnit
      routingKeys:
      - com.haima.cloudplayer.ops.domain.task.taskinstallapkbatch.TaskInstallationUnit
      srcExchange: exchange.ops
    - dstQueue: queue.ops.task.PutOnApk
      routingKeys:
      - com.haima.cloudplayer.ops.domain.task.TaskPutOnApk
      srcExchange: exchange.ops
    - dstQueue: log
      routingKeys:
      - '#'
      srcExchange: exchange.center
    - srcExchange: exchange.cloudservice.channel.statemachine
      dstQueue: queue.cloudservice.channel.statemachine
      routingKeys:
      - com.haima.cloudplayer.servicecore.domain.cloudservice.StateEventCarrier
    - srcExchange: exchange.accessLink
      dstQueue: queue.saasCore.access.sendMessageOperation
      routingKeys:
      - com.haima.cloudplayer.message.SendMessageToSDKMessage
    - srcExchange: exchange.accessLink
      dstQueue: queue.saasCore.access.deleteCidOperation
      routingKeys:
      - com.haima.cloudplayer.message.DeleteServiceChannelMessage
    - srcExchange: exchange.msgcenter.clientstate
      dstQueue: queue.msgcenter.clientstate.allocGroup
      routingKeys:
      - com.haima.cloudplayer.msgcenter.domain.message.AllocGroupCarrier
    - srcExchange: exchange.msgcenter.clientstate
      dstQueue: queue.msgcenter.clientstate.cancel
      routingKeys:
      - com.haima.cloudplayer.msgcenter.domain.client.ClientCancelCarrier
    - srcExchange: exchange.msgcenter.clientstate
      dstQueue: queue.msgcenter.clientstate.register
      routingKeys:
      - com.haima.cloudplayer.msgcenter.domain.client.ClientRegisterCarrier
    - srcExchange: exchange.msgcenter.pushmsg
      dstQueue: queue.msgcenter.pushmsg.groupMsg
      routingKeys:
      - com.haima.cloudplayer.msgcenter.domain.message.GroupMsgCarrier
    - srcExchange: exchange.msgcenter.pushmsg
      dstQueue: queue.msgcenter.pushmsg.singleMsg
      routingKeys:
      - com.haima.cloudplayer.msgcenter.domain.message.MsgCarrier
    - srcExchange: exchange.msgcenter.pushmsg
      dstQueue: queue.msgcenter.pushmsg.ack
      routingKeys:
      - com.haima.cloudplayer.msgcenter.domain.message.BatchMsgAckCarrier
    - srcExchange: exchange.accessLink.group.msg
      dstQueue: queue.accessLink.group.msg
      routingKeys:
      - com.haima.cloudplayer.message.MessageCentreCreateGroupMessage
    - srcExchange: exchange.msgcenter.clientstate
      dstQueue: queue.msgcenter.clientstate.ready
      routingKeys:
      - com.haima.cloudplayer.msgcenter.domain.client.ClientReadyCarrier
    - srcExchange: exchange.msgcenter.clientstate
      dstQueue: queue.msgcenter.clientstate.canceled
      routingKeys:
      - com.haima.cloudplayer.msgcenter.domain.client.ClientCanceledCarrier
    - srcExchange: exchange.msgcenter.clientstate
      dstQueue: queue.msgcenter.clientstate.kick
      routingKeys:
      - com.haima.cloudplayer.msgcenter.domain.client.ClientKickCarrier
    - srcExchange: exchange.valueadded
      dstQueue: queue.valueadded.verify.result
      routingKeys:
      - com.haima.cloudplayer.valueadded.domain.VerifyResult
    - srcExchange: exchange.valueadded
      dstQueue: queue.valueadded.verify.request
      routingKeys:
      - com.haima.cloudplayer.valueadded.domain.VerifyRequest
    - srcExchange: exchange.linkserver.clientstate.connectfailed
      dstQueue: queue.linkserver.clientstate.connectfailed
      routingKeys:
      - com.haima.cloudplayer.message.MessageConnectFail
    - srcExchange: exchange.valueadded.event
      dstQueue: queue.valueadded.event
      routingKeys:
      - com.haima.cloudplayer.valueadded.domain.CallbackRequest
    exchanges:
    - exchange: exchange.statemachine
      type: topic
    - exchange: exchange.center
      type: topic
    - exchange: exchange.ops
      type: topic
    - exchange: exchange.cloudservice.channel.statemachine
      type: topic
    - exchange: exchange.accessLink
      type: topic
    - exchange: exchange.msgcenter.pushmsg
      type: topic
    - exchange: exchange.msgcenter.clientstate
      type: topic
    - exchange: exchange.accessLink.message.send
      type: topic
    - exchange: exchange.accessLink.group.msg
      type: topic
    - exchange: exchange.accessLink.delete.msg
      type: topic
    - exchange: exchange.accessLink.message.send.group
      type: fanout
    - exchange: exchange.accessLink.delete.group.msg
      type: fanout
    - exchange: exchange.valueadded
      type: topic
    - exchange: exchange.linkserver.clientstate.connectfailed
      type: topic
    - exchange: exchange.valueadded.event
      type: topic
    queues:
    - name: queue.statemachine.monitor
    - name: queue.ops.task.started
    - name: queue.ops.task.TestA
    - name: queue.ops.task.TestB
    - name: queue.ops.task.TestC
    - name: queue.ops.task.UninstallApkBatchUnit
    - name: queue.ops.task.InstallApkBatchUnit
    - name: queue.ops.task.PutOnApk
    - name: log
    - name: queue.saasCore.access.deleteCidOperation
    - name: queue.cloudservice.channel.statemachine
    - name: queue.saasCore.access.sendMessageOperation
    - name: queue.msgcenter.clientstate.allocGroup
    - name: queue.msgcenter.clientstate.register
    - name: queue.msgcenter.clientstate.cancel
    - name: queue.msgcenter.pushmsg.singleMsg
    - name: queue.msgcenter.pushmsg.groupMsg
    - name: queue.msgcenter.pushmsg.ack
    - name: queue.accessLink.group.msg
    - name: queue.msgcenter.clientstate.ready
    - name: queue.msgcenter.clientstate.canceled
    - name: queue.msgcenter.clientstate.kick
    - name: queue.valueadded.verify.result
    - name: queue.valueadded.verify.request
    - name: queue.valueadded.event
    - name: queue.linkserver.clientstate.connectfailed
ribbon:
  eureka:
    enabled: true
  http:
    client:
      enabled: false
